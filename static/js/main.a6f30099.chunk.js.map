{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","placeholder","autoFocus","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Tweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","TweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6f30099.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth'\r\nimport \"firebase/database\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID \r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth()\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import React, { useEffect, useState } from 'react';\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser,userObj}) => {\r\n    const history = useHistory();\r\n\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: { value } } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    // const getMyNweets = async () => {\r\n    //     const nweets = await dbService\r\n    //     .collection(\"nweets\")\r\n    //     .where(\"creatorId\", \"==\", userObj.uid)\r\n    //     .orderBy(\"createdAt\")\r\n    //     .get();\r\n    //     console.log(nweets.docs.map((doc) => doc.data()));\r\n    // };\r\n    // useEffect(() => {\r\n    //     getMyNweets();\r\n    // }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: { name, value } } = event;\r\n\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n        let data;\r\n        if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n            );\r\n        } else {\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n        } catch (error) {\r\n        setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                value={password}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                className=\"authInput authSubmit\"\r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        \r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n};\r\nexport default AuthForm;","import { authService, firebaseInstance  } from 'fbase';\nimport React, { useState } from 'react';\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () =>{\n    const onSocialClick = async (event) => {\n        const {target: { name } } = event;\n\n        let provider;\n\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm></AuthForm>\n            <div className=\"authBtns\">\n                <button name='google' onClick={onSocialClick} className=\"authBtn\">Continue With Google<FontAwesomeIcon icon={faGoogle} /></button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n            </div>\n        </div>\n    )\n}\nexport default Auth","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    \r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return(\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            onChange={onChange}\r\n                            autoFocus\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                    )}\r\n                </>\r\n            )}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Tweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    // const getNweets = async () => {\r\n    //     const dbNweets = await dbService.collection(\"nweets\").get();\r\n    //     dbNweets.forEach((document) => {\r\n    //         const nweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id,\r\n    //         };\r\n    //         setNweets((prev) => [nweetObject, ...prev]);   \r\n    //     });\r\n    // };\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target: { value },} = event;\r\n        setNweet(value);\r\n    };\r\n    \r\n    const onFileChange = (event) => {\r\n        const {target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    \r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default TweetFactory;","import Tweet from 'components/Tweet';\r\nimport { dbService, storageService  } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TweetFactory userObj={userObj}></TweetFactory>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Tweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    ></Tweet>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{ marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Route,Switch} from 'react-router-dom'\r\nimport Profile from 'routes/Profile';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter =  ({refreshUser,isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj}  />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path='/'>\r\n                            <Home userObj={userObj}></Home>\r\n                        </Route>\r\n                        <Route exact path='/profile'>\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path='/'>\r\n                            <Auth></Auth>\r\n                        </Route>\r\n                    </>\r\n                ) \r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRouter","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport {authService} from 'fbase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  \r\n  return (\r\n    <>\r\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n      {/* <footer>&copy; twitter {new Date().getFullYear()}</footer> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport firebase from './fbase'\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}